public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(candidates.length==0)return res;
        List<Integer> combination = new ArrayList<Integer>();
        combinationSumHelper(candidates, 0, target, combination, res);
        return res;
    }
    public void combinationSumHelper(int[] candidates, int index, int target, List<Integer> combination, List<List<Integer>> res){
        if(target<0){
            return;
        }
        if(target==0){
            List<Integer> list = new ArrayList<Integer>(combination);
            res.add(list);
        }
        
        for(int i=index; i<candidates.length; i++){
            combination.add(candidates[i]);
            combinationSumHelper(candidates, i, target-candidates[i], combination, res);
            combination.remove(combination.size()-1);
        }
    }
}
