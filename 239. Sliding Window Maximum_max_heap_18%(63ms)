public class Solution {
    public Comparator<Integer> maxComparator = new Comparator<Integer>(){
        public int compare(Integer n1, Integer n2){
            return n1>n2?-1:1;
        }
    };
    public int[] maxSlidingWindow(int[] nums, int k) {
        int len = nums.length;
        if(len==0)return new int[0];
        PriorityQueue<Integer> heap = new PriorityQueue<Integer>(k, maxComparator);
        for(int i=0; i<k; i++){
            heap.offer(nums[i]);
        }
        int[] res = new int[len-k+1];
        res[0]=heap.peek();
        for(int i=k; i<len;i++){
            heap.offer(nums[i]);
            heap.remove(nums[i-k]);
            res[i-k+1]=heap.peek();
        }
        return res;
    }
}
