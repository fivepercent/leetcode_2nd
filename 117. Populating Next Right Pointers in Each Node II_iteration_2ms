/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null)return;
        TreeLinkNode parent = root;
        while(parent.left!=null||parent.right!=null){
            TreeLinkNode curNode =parent;
            while(curNode!=null){
                if(curNode.left!=null){
                    curNode.left.next=getNext(curNode, true);
                }
                if(curNode.right!=null){
                    curNode.right.next=getNext(curNode, false);
                }
                curNode=curNode.next;
            }
            parent=parent.left==null?parent.right:parent.left;
            while(parent.left==null&&parent.right==null&&parent.next!=null)parent=parent.next;
        }
    }
    public TreeLinkNode getNext(TreeLinkNode parent, boolean isLeft){
        if(isLeft&&parent.right!=null){
            return parent.right;
        }
        parent=parent.next;
        while(parent!=null){
            if(parent.left!=null)return parent.left;
            if(parent.right!=null)return parent.right;
            parent=parent.next;
        }
        return null;
    }
}
