public class Solution {
    public boolean search(int[] nums, int target) {
        int len =nums.length;
    //    if(len==0)return false;
        return search(nums, target, 0, len-1);
    }
    public boolean search(int[] nums, int target, int start, int end){
        if(start>end)return false;
        int mid=start+(end-start)/2;
        if(nums[mid]==target)return true;
        if(target>nums[mid]){
            if(nums[mid]>nums[end]){
                return search(nums, target, mid+1, end);
            }else if(nums[mid]<nums[end]){
                boolean right=search(nums, target, mid+1, end);
                return right?true:search(nums, target, start, mid-1);
            }else{
                return search(nums, target, start, end-1);
            }
        }else{
            if(nums[mid]<nums[end]){
                return search(nums, target, start, mid-1);
            }else if(nums[mid]>nums[end]){
                boolean left=search(nums, target, start, mid-1);
                return left?true:search(nums, target, mid+1, end);
            }else{
                return search(nums, target, start, end-1);
            }
        }
    }
}
