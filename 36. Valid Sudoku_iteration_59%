public class Solution {
    public boolean isValidSudoku(char[][] board) {
//        int rows=board.length;
//        int col=board[0].length;
        //check row
        for(int i=0; i<9; i++){
            int[] table = new int[10];
            for(int j=0; j<9; j++){
                char current=board[i][j];
                if(current=='.')continue;
                if(table[current-'0']>=1){
                    return false;
                }else{
                    table[current-'0']++;
                }
            }
        }
        
        //check col
        for(int j=0; j<9; j++){
            int[] table = new int[10];
            for(int i=0; i<9; i++){
                char current=board[i][j];
                if(current=='.')continue;
                if(table[current-'0']>=1){
                    return false;
                }else{
                    table[current-'0']++;
                }
            }
        }
        
        //check square
        for(int i=0; i<9; i++){
            int[] table = new int[10];
            for(int j=0; j<9; j++){
                char current=board[(i/3)*3+j/3][(i%3)*3+j%3];
                if(current=='.')continue;
                if(table[current-'0']>=1){
                    return false;
                }else{
                    table[current-'0']++;
                }
            }
        }
        return true;
    }
}
