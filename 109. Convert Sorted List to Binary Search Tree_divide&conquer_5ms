/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode sortedListToBST(ListNode head) {
        ArrayList<Integer> nums = new ArrayList<Integer>();
        while(head!=null){
            nums.add(head.val);
            head=head.next;
        }
        return sortedListToBST(nums, 0, nums.size()-1);
    }
    public TreeNode sortedListToBST(ArrayList<Integer> nums, int start, int end){
        if(start>end)return null;
        int mid=start+(end-start)/2;
        TreeNode root = new TreeNode(nums.get(mid));
        root.left=sortedListToBST(nums, start, mid-1);
        root.right=sortedListToBST(nums, mid+1, end);
        return root;
    }
}
