/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public int minMeetingRooms(Interval[] intervals) {
        int len = intervals.length;
        int[] starts = new int[len];
        int[] ends = new int[len];
        for(int i=0; i<len; i++){
            starts[i]=intervals[i].start;
            ends[i]=intervals[i].end;
        }
        Arrays.sort(starts);
        Arrays.sort(ends);
        
        int is=0, ie=0;
        int cur=0;
        int max=0;
        while(is<len){
            if(starts[is]<ends[ie]){
                cur++;
                is++;
            }else{
                cur--;
                ie++;
            }
            if(cur>max)max=cur;
        }
        return max;
    }
}
