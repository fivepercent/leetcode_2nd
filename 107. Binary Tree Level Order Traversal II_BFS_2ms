/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if(root==null){
            return result;
        }
        Queue<TreeNode> childrens = new LinkedList<TreeNode>();
    //    Stack<List<Integer>> stack = new Stack<List<Integer>>();
        childrens.offer(root);
        while(!childrens.isEmpty()){
            List<Integer> level = new ArrayList<Integer>(); 
            int size=childrens.size();
            for(int i=0; i<size; i++){
                TreeNode node = childrens.poll();
                level.add(node.val);
                if(node.left!=null)childrens.offer(node.left);
                if(node.right!=null)childrens.offer(node.right);
            }
            result.add(level);
        }
        Collections.reverse(result);
        return result;
    }
}
