/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(root==null)return res;
        Stack<TreeNode> stack1 = new Stack<TreeNode>();
        stack1.push(root);
        boolean isRev=true;
        while(!stack1.isEmpty()){
            Stack<TreeNode> stack2 = new Stack<TreeNode>();
            List<Integer> list = new ArrayList<Integer>();
            while(!stack1.isEmpty()){
                TreeNode cur = stack1.pop();
                list.add(cur.val);
                if(isRev){
                    if(cur.left!=null)stack2.push(cur.left);
                    if(cur.right!=null)stack2.push(cur.right);
                }else{
                    if(cur.right!=null)stack2.push(cur.right);
                    if(cur.left!=null)stack2.push(cur.left);
                }
            }
            isRev=!isRev;
            stack1=stack2;
            res.add(list);
        }
        return res;
    }
}
