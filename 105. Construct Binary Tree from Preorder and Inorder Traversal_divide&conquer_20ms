/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return buildTree(preorder, 0, inorder, 0, inorder.length-1);
    }
    public TreeNode buildTree(int[] preorder, int r, int[] inorder, int s, int e){
        if(s>e)return null;
        TreeNode root = new TreeNode(preorder[r]);
        int r_index=0;
        while(s+r_index<e&&inorder[s+r_index]!=preorder[r])r_index++;
        root.left=buildTree(preorder, r+1, inorder, s, s+r_index-1);
        root.right=buildTree(preorder, r+r_index+1, inorder, s+r_index+1, e);
        return root;
    }
}
