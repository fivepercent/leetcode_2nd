public class Solution {
    public String longestPalindrome(String s) {
        int len=s.length();
        char[] sa=new char[2*len+1];
        int index=0;
        for(int i=0; i<len; i++){
            sa[index++]='#';
            sa[index++]=s.charAt(i);
        }
        sa[2*len]='#';
        int[] p = new int[2*len+1];
        int id=0;
        int mx=0;
        int resi=0;
        int leni=0;
        for(int i=0; i<2*len+1; i++){
            p[i]=mx>i?Math.min(p[2*id-i], mx-i):0;
            while(i+p[i]+1<sa.length&&i-p[i]-1>=0&&sa[i+p[i]+1]==sa[i-p[i]-1])p[i]++;
            if(i+p[i]>mx){
                id=i;
                mx=i+p[i];
            }
            if(p[i]>leni){
                leni=p[i];
                resi=i;
            }
        }
        StringBuilder sb = new StringBuilder();
        for(int i=resi-leni+1; i<=resi+leni-1; i+=2){
            sb.append(sa[i]);
        }
        return sb.toString();
    }
}
