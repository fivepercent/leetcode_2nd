public class Solution {
    public int trap(int[] height) {
        Stack<Integer> stack = new Stack<Integer>();
        int water=0;
        for(int i=0; i<height.length; i++){
            if(stack.isEmpty()||height[stack.peek()]>=height[i]){
                stack.push(i);
            }else{
                while(!stack.isEmpty()&&height[stack.peek()]<height[i]){
                    int mid= stack.pop();
                    if(!stack.isEmpty()){
                        int j=stack.peek();
                        water+=(Math.min(height[j], height[i])-height[mid])*(i-j-1);
                    }
                }
                stack.push(i);
            }
        }
        return water;
    }
}
